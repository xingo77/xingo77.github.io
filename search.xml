<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MyBatis注解开发练习</title>
      <link href="/crc32/b8dd3952.html"/>
      <url>/crc32/b8dd3952.html</url>
      
        <content type="html"><![CDATA[<p><strong>这几年来注解开发越来越流行，Mybatis 也可以使用注解开发方式，这样我们就可以减少编写 Mapper 映射文件了。</strong></p><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li><p>Idea 2021.4</p></li><li><p>MySql 5.7.29</p></li></ul><h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><h2 id="MyBatis-的常用注解说明"><a href="#MyBatis-的常用注解说明" class="headerlink" title="MyBatis 的常用注解说明"></a>MyBatis 的常用注解说明</h2><ul><li>@Insert:实现新增</li><li>@Update:实现更新</li><li>@Delete:实现删除</li><li>@Select:实现查询</li><li>@Result:实现结果集封装</li><li>@Results:可以与@Result 一起使用，封装多个结果集</li><li>@ResultMap:实现引用@Results 定义的封装</li><li>@One:实现一对一结果集封装</li><li>@Many:实现一对多结果集封装</li></ul><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><ul><li>实现Mybatis实现学生表与地址表连表查询；</li></ul><h1 id="编程要求"><a href="#编程要求" class="headerlink" title="编程要求"></a>编程要求</h1><ol><li>创建数据库ssm_03和数据库表Student、Address；</li><li>创建Java项目，并添加MyBatis包和驱动包；</li><li>创建实体类，与Student表对应；<br>⦁创建成员变量和getter&#x2F;setter访问器；<br>⦁根据具体需求提供无参或有参构造方法；</li><li>导入并修改jdbc.properties文件；</li><li>创建MyBatis核心配置文件mybatis-config.xml</li><li>创建数据访问层接口，声明连表查询方法；使用注解的方式</li><li>创建测试类；<br>⦁测试连表查询方法，能实现连表查询功能;(5分)<br>⦁参考效果如下图所示；</li></ol><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><p>创建数据库ssm_03并设置编码utf8</p><h2 id="创建数据表并且插入测试数据"><a href="#创建数据表并且插入测试数据" class="headerlink" title="创建数据表并且插入测试数据"></a>创建数据表并且插入测试数据</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line"> Navicat Premium Data Transfer</span><br><span class="line"></span><br><span class="line"> Source Server         : mysql</span><br><span class="line"> Source Server Type    : MySQL</span><br><span class="line"> Source Server Version : 80011</span><br><span class="line"> Source Host           : localhost:3306</span><br><span class="line"> Source Schema         : ssm_03</span><br><span class="line"></span><br><span class="line"> Target Server Type    : MySQL</span><br><span class="line"> Target Server Version : 80011</span><br><span class="line"> File Encoding         : 65001</span><br><span class="line"></span><br><span class="line"> Date: 24/05/2022 14:40:44</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">SET NAMES utf8mb4;</span><br><span class="line">SET FOREIGN_KEY_CHECKS = 0;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for address</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `address`;</span><br><span class="line">CREATE TABLE `address`  (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT &#x27;id，主键，自增&#x27;,</span><br><span class="line">  `addressName` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT &#x27;地址名称&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`) USING BTREE</span><br><span class="line">) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of address</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `address` VALUES (1, &#x27;北京&#x27;);</span><br><span class="line">INSERT INTO `address` VALUES (2, &#x27;上海&#x27;);</span><br><span class="line">INSERT INTO `address` VALUES (3, &#x27;天津&#x27;);</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for student</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `student`;</span><br><span class="line">CREATE TABLE `student`  (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT &#x27;id，主键自增&#x27;,</span><br><span class="line">  `stuName` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT &#x27;学生姓名&#x27;,</span><br><span class="line">  `provinceId` int(11) NULL DEFAULT NULL COMMENT &#x27;居住省份&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`) USING BTREE</span><br><span class="line">) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of student</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `student` VALUES (1, &#x27;张三&#x27;, 1);</span><br><span class="line">INSERT INTO `student` VALUES (2, &#x27;李四&#x27;, 2);</span><br><span class="line">INSERT INTO `student` VALUES (3, &#x27;王五&#x27;, 3);</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS = 1;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mybatis </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis综合练习</title>
      <link href="/crc32/c8b3664c.html"/>
      <url>/crc32/c8b3664c.html</url>
      
        <content type="html"><![CDATA[<p><strong>学习完了MyBatis 做一个小练习</strong></p><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li><p>Idea 2021.4</p></li><li><p>MySql 5.7.29</p></li></ul><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><ul><li><p>使用动态SQL按条件查询动物；以实体类入参，判断属性是否为空，形成动态SQL；</p></li><li><p>使用动态SQL组合更新SQL语句；当name、type不为null或“”，age大于0时才能更新对应属性到数据库；</p></li><li><p>使用动态SQL批量删除记录；使用数组作为参数，批量删除多个id对应的记录；</p></li></ul><h1 id="编程要求"><a href="#编程要求" class="headerlink" title="编程要求"></a>编程要求</h1><ol><li><p>创建数据库ssm_04;</p></li><li><p>根据需求创建数据表并且插入测试数据；</p></li><li><p>创建Java项目，增加JUnit测试包；</p></li><li><p>导入并修改jdbc.properties文件；</p></li><li><p>导入mybatis-config.xml核心配置文件;</p></li><li><p>创建实体类，与Animal表对应；<br>⦁创建成员变量和getter&#x2F;setter访问器；<br>⦁根据具体需求提供无参或有参构造方法；</p></li><li><p>创建数据访问层接口；<br>⦁selectByCdt()判断Animal对象各个属性是否为空，不为null、“”或0时，形成查询条件；<br>⦁selectByIdsList()根据给定的多个id查询对应的Animal；</p><p>⦁updateAnimal()将不为null、””或0的数据更新到数据库；（5分）<br>⦁deleteAnimalBatch()根据id删除多个动物；（5分）</p></li><li><p>创建与接口对应的SQL映射文件，并完成配置；<br>⦁正确指定命名空间；<br>⦁编写select元素，实现selectByCdt()，使用where和if标签实现动态SQL<br>⦁编写select元素，实现selectByIdsList()，使用foreach完成参数遍历；</p><p>⦁通过set和if编写update元素，实现updateAnimal ()（8分）<br>⦁通过foreach编写delete元素，实现批量删除；（8分）</p></li><li><p>创建测试类<br>⦁测试selectByCdt( )方法，能按照非空条件查询；（输出包含id、姓名、种类和年龄，格式不限，能清晰输出即可）尝试给Animal对象各个属性赋值进行测试，最终只保留一个测试方法即可；</p><p>⦁创建测试方法，测试修改；</p><p>⦁创建测试方法，测试批量删除；</p></li></ol><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><p>​创建数据库ssm_04并设置编码utf8</p><h2 id="创建数据表并且插入测试数据"><a href="#创建数据表并且插入测试数据" class="headerlink" title="创建数据表并且插入测试数据"></a>创建数据表并且插入测试数据</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line"> Navicat Premium Data Transfer</span><br><span class="line"></span><br><span class="line"> Source Server         : mysql</span><br><span class="line"> Source Server Type    : MySQL</span><br><span class="line"> Source Server Version : 50729</span><br><span class="line"> Source Host           : localhost:3306</span><br><span class="line"> Source Schema         : ssm_04</span><br><span class="line"></span><br><span class="line"> Target Server Type    : MySQL</span><br><span class="line"> Target Server Version : 50729</span><br><span class="line"> File Encoding         : 65001</span><br><span class="line"></span><br><span class="line"> Date: 20/05/2022 22:39:06</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">SET NAMES utf8mb4;</span><br><span class="line">SET FOREIGN_KEY_CHECKS = 0;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for animal</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `animal`;</span><br><span class="line">CREATE TABLE `animal`  (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,</span><br><span class="line">  `type` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,</span><br><span class="line">  `age` int(11) NULL DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`) USING BTREE</span><br><span class="line">) ENGINE = InnoDB AUTO_INCREMENT = 6 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of animal</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `animal` VALUES (1, &#x27;巧克力&#x27;, &#x27;泰迪&#x27;, 4);</span><br><span class="line">INSERT INTO `animal` VALUES (2, &#x27;小可奶&#x27;, &#x27;边境牧羊犬&#x27;, 4);</span><br><span class="line">INSERT INTO `animal` VALUES (3, &#x27;德德&#x27;, &#x27;德国牧羊犬&#x27;, 5);</span><br><span class="line">INSERT INTO `animal` VALUES (4, &#x27;酷奇&#x27;, &#x27;拉布拉多&#x27;, 8);</span><br><span class="line">INSERT INTO `animal` VALUES (5, &#x27;珂珂&#x27;, &#x27;哈士奇&#x27;, 7);</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS = 1;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="创建Java项目并配置"><a href="#创建Java项目并配置" class="headerlink" title="创建Java项目并配置"></a>创建Java项目并配置</h2><p>使用idea创建一个maven项目</p><p>​<label style="color:red">在设置里配置一下maven位置，用户配置文件和仓库</label></p><h3 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h3><p>在pom.xml中导入并刷新</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">3.5</span><span class="number">.0</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;!--mysql驱动版本建议和你自己的mysql版本的保持一致--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">5.1</span><span class="number">.29</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;    </span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;log4j&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;log4j&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">1.2</span><span class="number">.17</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">4.12</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><h3 id="创建类"><a href="#创建类" class="headerlink" title="创建类"></a>创建类</h3><ul><li>实体类：main&#x2F;java下创建 com.xxx.pojo.Animal</li><li>接口类：main&#x2F;java下创建 com.xxx.dao.AnimalDao</li><li>映射文件：java下创建 com\xxx\dao\AnimalDao.xml</li><li>测试类：test&#x2F;java下创建com.xxx.dao.MyTest</li></ul><h3 id="配置数据库信息"><a href="#配置数据库信息" class="headerlink" title="配置数据库信息"></a>配置数据库信息</h3><p>在resources下创建 mybatis-config.xml 文件</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbc.driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbc.url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/ssm_04?useUnicode=true&amp;characterEncoding=UTF-8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbc.username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;****&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbc.password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;****&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">     <span class="comment">&lt;!--实体类包批量设置别名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.xxx.pojo&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--用jdbc做事务控制  --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据库连接池  --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/xxx/dao/AnimalDao.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里省略了jdbc.properties文件 直接写在了配置文件里</p><h3 id="配置日志文件"><a href="#配置日志文件" class="headerlink" title="配置日志文件"></a>配置日志文件</h3><p>在resources下创建 log4j.properties 文件</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">log4j.rootLogger=DEBUG,CONSOLE,file</span><br><span class="line">#log4j.rootLogger=ERROR,ROLLING_FILE</span><br><span class="line">log4j.logger.cn.smbms.dao=debug</span><br><span class="line">log4j.logger.com.ibatis=debug </span><br><span class="line">log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=debug </span><br><span class="line">log4j.logger.com.ibatis.common.jdbc.ScriptRunner=debug </span><br><span class="line">log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=debug </span><br><span class="line">log4j.logger.java.sql.Connection=debug </span><br><span class="line">log4j.logger.java.sql.Statement=debug </span><br><span class="line">log4j.logger.java.sql.PreparedStatement=debug </span><br><span class="line">log4j.logger.java.sql.ResultSet=debug </span><br><span class="line">log4j.logger.org.tuckey.web.filters.urlrewrite.UrlRewriteFilter=debug</span><br><span class="line"></span><br><span class="line">######################################################################################</span><br><span class="line"># Console Appender  \u65e5\u5fd7\u5728\u63a7\u5236\u8f93\u51fa\u914d\u7f6e</span><br><span class="line">######################################################################################</span><br><span class="line">log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.Threshold=error</span><br><span class="line">log4j.appender.CONSOLE.Target=System.out</span><br><span class="line">log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.CONSOLE.layout.ConversionPattern= [%p] %d %c - %m%n</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">######################################################################################</span><br><span class="line"># DailyRolling File  \u6bcf\u5929\u4ea7\u751f\u4e00\u4e2a\u65e5\u5fd7\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u683c\u5f0f:log2009-09-11</span><br><span class="line">######################################################################################</span><br><span class="line">log4j.appender.file=org.apache.log4j.DailyRollingFileAppender</span><br><span class="line">log4j.appender.file.DatePattern=yyyy-MM-dd</span><br><span class="line">log4j.appender.file.File=log.log</span><br><span class="line">log4j.appender.file.Append=true</span><br><span class="line">log4j.appender.file.Threshold=error</span><br><span class="line">log4j.appender.file.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.file.layout.ConversionPattern=%d&#123;yyyy-M-d HH:mm:ss&#125;%x[%5p](%F:%L) %m%n</span><br><span class="line"></span><br><span class="line">log4j.logger.com.opensymphony.xwork2=error  </span><br></pre></td></tr></table></figure><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><p>创建成员变量和getter&#x2F;setter访问器 添加toString方法<label style="color:red">(添加toString方法时不用加入List<Integer> ids)</label></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line">   <span class="keyword">private</span> String type;</span><br><span class="line">   <span class="keyword">private</span> Integer age;</span><br><span class="line"><span class="keyword">private</span> List&lt;Integer&gt; ids;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;Animal&#123;&quot;</span> +</span><br><span class="line">               <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">               <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">               <span class="string">&quot;, type=&#x27;&quot;</span> + type + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">               <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">               <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.id = id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.name = name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">getType</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> type;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setType</span><span class="params">(String type)</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.type = type;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> Integer <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> age;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(Integer age)</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.age = age;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">getIds</span><span class="params">(List&lt;Integer&gt; list)</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> ids;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setIds</span><span class="params">(List&lt;Integer&gt; ids)</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.ids = ids;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="接口类"><a href="#接口类" class="headerlink" title="接口类"></a>接口类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//查询所有</span></span><br><span class="line">List&lt;Animal&gt; <span class="title function_">selectAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过动物属性查询</span></span><br><span class="line">List&lt;Animal&gt; <span class="title function_">selectByCdt</span><span class="params">(Animal animal)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过多个id查询</span></span><br><span class="line">List&lt;Animal&gt; <span class="title function_">selectByIdsList</span><span class="params">(Animal animal)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改动物属性</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">updateAnimal</span><span class="params">(Animal animal)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//批量删除</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">deleteAnimalBatch</span><span class="params">(Animal animal)</span>;</span><br></pre></td></tr></table></figure><h2 id="映射文件"><a href="#映射文件" class="headerlink" title="映射文件"></a>映射文件</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.xxx.dao.AnimalDao&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Animal&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM animal</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--通过动物属性查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByCdt&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Animal&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Animal&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--名字或类型为空或空字符串或者年龄为0就查询所有--&gt;</span></span><br><span class="line">        SELECT * FROM animal</span><br><span class="line">        <span class="comment">&lt;!--如果满足如下条件就加上模糊查询--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;name!=null and name !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                AND name LIKE #&#123;name&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;type!=null and type!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                AND type LIKE #&#123;type&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;age!=0&quot;</span>&gt;</span></span><br><span class="line">                AND age LIKE #&#123;age&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--通过多个id查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByIdsList&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Animal&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Animal&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM animal</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;ids!=null and ids.size()&gt;0&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;ids&quot;</span> <span class="attr">open</span>=<span class="string">&quot;id in(&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">                    #&#123;id&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--修改动物属性--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateAnimal&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Animal&quot;</span>&gt;</span></span><br><span class="line">        UPDATE animal</span><br><span class="line">        -- trim能够自动删掉最后的,</span><br><span class="line">        -- prefix=&quot;set&quot;,最前面的单词为set</span><br><span class="line">        -- suffixOverrides=&quot;,&quot;不保留最后的逗号</span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;set&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;name!=null and name!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                name = #&#123;name&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;type!=null and type!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                type = #&#123;type&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;age!=0&quot;</span>&gt;</span></span><br><span class="line">                age = #&#123;age&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">        where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--批量删除--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteAnimalBatch&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Animal&quot;</span>&gt;</span></span><br><span class="line">        DELETE FROM animal</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;ids&quot;</span> <span class="attr">open</span>=<span class="string">&quot;id in(&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">                #&#123;id&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><h2 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> InputStream input;</span><br><span class="line">   <span class="keyword">private</span> SqlSession session;</span><br><span class="line">   <span class="keyword">private</span> AnimalDao animalDao;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Before</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">       input = Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">       <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(input);</span><br><span class="line">       session = sqlSessionFactory.openSession();</span><br><span class="line">       animalDao = session.getMapper(AnimalDao.class);<span class="comment">//用动态代理的方式自动生成接口的实现类</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@After</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">       input.close();</span><br><span class="line">       session.close();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Test</span></span></span><br><span class="line"><span class="comment">    * 查询所有</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testselectAll</span><span class="params">()</span>&#123;</span><br><span class="line">       List&lt;Animal&gt; animals = animalDao.selectAll();</span><br><span class="line">       <span class="keyword">for</span> (Animal animal : animals) &#123;</span><br><span class="line">           System.out.println(animal.toString());</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Test</span></span></span><br><span class="line"><span class="comment">    * 当姓名为“”种类为“”年龄为0时，能查询出所有动物</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testselectByCdt01</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">Animal</span> <span class="variable">animal</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Animal</span>();</span><br><span class="line">       animal.setName(<span class="string">&quot;&quot;</span>);</span><br><span class="line">       animal.setType(<span class="string">&quot;&quot;</span>);</span><br><span class="line">       animal.setAge(<span class="number">0</span>);</span><br><span class="line">       List&lt;Animal&gt; animals = animalDao.selectByCdt(animal);</span><br><span class="line">       <span class="keyword">for</span> (Animal animal1 : animals) &#123;</span><br><span class="line">           System.out.println(animal1.toString());</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Test</span></span></span><br><span class="line"><span class="comment">    * 当姓名为“”种类为“牧羊”年龄为0时，能查询出种类包含“牧羊”的动物；</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testselectByCdt02</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">Animal</span> <span class="variable">animal</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Animal</span>();</span><br><span class="line">       animal.setName(<span class="string">&quot;&quot;</span>);</span><br><span class="line">       animal.setType(<span class="string">&quot;%牧羊%&quot;</span>);</span><br><span class="line">       animal.setAge(<span class="number">0</span>);</span><br><span class="line">       List&lt;Animal&gt; animals = animalDao.selectByCdt(animal);</span><br><span class="line">       <span class="keyword">for</span> (Animal animal1 : animals) &#123;</span><br><span class="line">           System.out.println(animal1.toString());</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Test</span></span></span><br><span class="line"><span class="comment">    * 当名字、种类为null或空字符串，年龄为0时，查询所有动物；</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testselectByCdt03</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">Animal</span> <span class="variable">animal</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Animal</span>();</span><br><span class="line">       animal.setName(<span class="literal">null</span>);</span><br><span class="line">       animal.setType(<span class="literal">null</span>);</span><br><span class="line">       animal.setAge(<span class="number">0</span>);</span><br><span class="line">       List&lt;Animal&gt; animals = animalDao.selectByCdt(animal);</span><br><span class="line">       <span class="keyword">for</span> (Animal animal1 : animals) &#123;</span><br><span class="line">           System.out.println(animal1.toString());</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Test</span></span></span><br><span class="line"><span class="comment">    * 当名字为null、种类为“犬”、年龄为0时，查询所有种类带“犬”的动物；</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testselectByCdt04</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">Animal</span> <span class="variable">animal</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Animal</span>();</span><br><span class="line">       animal.setName(<span class="literal">null</span>);</span><br><span class="line">       animal.setType(<span class="string">&quot;%犬%&quot;</span>);</span><br><span class="line">       animal.setAge(<span class="number">0</span>);</span><br><span class="line">       List&lt;Animal&gt; animals = animalDao.selectByCdt(animal);</span><br><span class="line">       <span class="keyword">for</span> (Animal animal1 : animals) &#123;</span><br><span class="line">           System.out.println(animal1.toString());</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Test</span></span></span><br><span class="line"><span class="comment">    * 当名字为null、种类为“犬”、年龄为5时，查询所有种类带“犬”且是5岁的动物；</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testselectByCdt05</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">Animal</span> <span class="variable">animal</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Animal</span>();</span><br><span class="line">       animal.setName(<span class="literal">null</span>);</span><br><span class="line">       animal.setType(<span class="string">&quot;%犬%&quot;</span>);</span><br><span class="line">       animal.setAge(<span class="number">5</span>);</span><br><span class="line">       List&lt;Animal&gt; animals = animalDao.selectByCdt(animal);</span><br><span class="line">       <span class="keyword">for</span> (Animal animal1 : animals) &#123;</span><br><span class="line">           System.out.println(animal1.toString());</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Test</span></span></span><br><span class="line"><span class="comment">    * 查询id为2、3、5的三个动物；</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testselectByIdsList</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">Animal</span> <span class="variable">animal</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Animal</span>();</span><br><span class="line">       List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line">       list.add(<span class="number">2</span>);</span><br><span class="line">       list.add(<span class="number">3</span>);</span><br><span class="line">       list.add(<span class="number">5</span>);</span><br><span class="line">       animal.setIds(list);</span><br><span class="line">       List&lt;Animal&gt; listAnimal = animalDao.selectByIdsList(animal);</span><br><span class="line">       <span class="keyword">for</span> (Animal animal1 : listAnimal) &#123;</span><br><span class="line">           System.out.println(animal1.toString());</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Test</span></span></span><br><span class="line"><span class="comment">    * 修改id为2动物的name；</span></span><br><span class="line"><span class="comment">    * 此时，Animal参数（id=2，name=”大可爱”，type=””，age=0）；</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testupdateAnimal</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">Animal</span> <span class="variable">animal</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Animal</span>();</span><br><span class="line">       animal.setId(<span class="number">2</span>);</span><br><span class="line">       animal.setName(<span class="string">&quot;大可爱&quot;</span>);</span><br><span class="line">       animal.setType(<span class="string">&quot;大型犬&quot;</span>);</span><br><span class="line">       animal.setAge(<span class="number">0</span>);</span><br><span class="line">       testselectAll();</span><br><span class="line">       animalDao.updateAnimal(animal);</span><br><span class="line">       session.commit();</span><br><span class="line">       testselectAll();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Test</span></span></span><br><span class="line"><span class="comment">    * 删除id为1、3、4的动物；</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testdeleteAnimalBatch</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">Animal</span> <span class="variable">animal</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Animal</span>();</span><br><span class="line">       List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line">       list.add(<span class="number">1</span>);</span><br><span class="line">       list.add(<span class="number">3</span>);</span><br><span class="line">       list.add(<span class="number">4</span>);</span><br><span class="line">       animal.setIds(list);</span><br><span class="line">       testselectAll();</span><br><span class="line">       animalDao.deleteAnimalBatch(animal);</span><br><span class="line">       session.commit();</span><br><span class="line">       testselectAll();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h1 id="BUG调试"><a href="#BUG调试" class="headerlink" title="BUG调试"></a>BUG调试</h1><ul><li><h3 id="插入中文查不到或者报错-在jdbc-url后面加上编码格式"><a href="#插入中文查不到或者报错-在jdbc-url后面加上编码格式" class="headerlink" title="插入中文查不到或者报错 在jdbc.url后面加上编码格式"></a>插入中文查不到或者报错 在jdbc.url后面加上编码格式</h3></li></ul><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">useUnicode=true&amp;characterEncoding=UTF-8</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mybatis </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/crc32/4a17b156.html"/>
      <url>/crc32/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
